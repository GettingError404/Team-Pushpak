rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --- Notices Collection ---
    // Anyone can read notices
    // Only authenticated admins can create/update/delete
    match /notices/{noticeId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null
        && request.auth.token.role == 'admin';
    }

    // --- Projects Collection ---
    // Anyone can read projects
    // Only admins can modify
    match /projects/{projectId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null
        && request.auth.token.role == 'admin';
    }

    // --- Users Collection ---
    // Users can read/update only their own profile
    // Admins can read/write all
    match /users/{userId} {
      allow read, update: if request.auth != null
        && (request.auth.uid == userId || request.auth.token.role == 'admin');
      allow create: if request.auth != null && request.auth.uid == userId;
      allow delete: if request.auth != null && request.auth.token.role == 'admin';
    }

    // --- Events Collection ---
    // Anyone can read events
    // Only admins can add/update/delete
    match /events/{eventId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null
        && request.auth.token.role == 'admin';
    }

    // Default deny for any other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
